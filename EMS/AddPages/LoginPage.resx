<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="LoginPage.IconOptions.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>